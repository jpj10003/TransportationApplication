package com.TransporationApplication.Login;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.springframework.stereotype.Repository;

@Repository
public class LoginDAOImpl implements LoginDAO {

	private Session session;

	private Transaction transaction;

	public Session getSession() {
		return session;
	}

	public void setSession(Session session) {
		this.session = session;
	}

	public Transaction getTransaction() {
		return transaction;
	}

	public void setTransaction(Transaction transaction) {
		this.transaction = transaction;
	}

	public Session openSession() {
		session = getSessionFactory().openSession();
		return session;
	}

	public Session openSessionwithTransaction() {
		session = getSessionFactory().openSession();
		transaction = session.beginTransaction();
		return session;
	}

	public void closeSession() {
		session.close();
	}

	public void closeSessionwithTransaction() {
		transaction.commit();
		session.close();
	}

	private static SessionFactory getSessionFactory() {
		Configuration configuration = new Configuration().configure();
		StandardServiceRegistryBuilder builder = new StandardServiceRegistryBuilder()
				.applySettings(configuration.getProperties());
		SessionFactory sessionFactory = configuration.buildSessionFactory(builder.build());
		return sessionFactory;
	}

	@Override
	public User validateUser(String uname, String password) {
		
		openSession();
		
		List<User> users = (List<User>) getSession()
				.createQuery("from User u where u.userName = '" + uname + "'" + " and u.password = '" + password+"'").list();
		closeSession();
		if (users.isEmpty()) {
			return null;
		} else {
			return users;
		}

	}

}
